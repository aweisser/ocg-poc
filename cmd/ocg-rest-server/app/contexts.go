// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "ocg": Application Contexts
//
// Command:
// $ goagen
// --design=github.com/aweisser/ocg-poc/cmd/ocg-rest-server/design
// --out=$(GOPATH)\src\github.com\aweisser\ocg-poc\cmd\ocg-rest-server\
// --version=v1.1.0-dirty

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ShowMemberContext provides the member show action context.
type ShowMemberContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	IfModifiedSince *string
	IfNoneMatch     *string
	MemberID        string
}

// NewShowMemberContext parses the incoming request URL and body, performs validations and creates the
// context used by the member controller show action.
func NewShowMemberContext(ctx context.Context, r *http.Request, service *goa.Service) (*ShowMemberContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ShowMemberContext{Context: ctx, ResponseData: resp, RequestData: req}
	headerIfModifiedSince := req.Header["If-Modified-Since"]
	if len(headerIfModifiedSince) > 0 {
		rawIfModifiedSince := headerIfModifiedSince[0]
		req.Params["If-Modified-Since"] = []string{rawIfModifiedSince}
		rctx.IfModifiedSince = &rawIfModifiedSince
	}
	headerIfNoneMatch := req.Header["If-None-Match"]
	if len(headerIfNoneMatch) > 0 {
		rawIfNoneMatch := headerIfNoneMatch[0]
		req.Params["If-None-Match"] = []string{rawIfNoneMatch}
		rctx.IfNoneMatch = &rawIfNoneMatch
	}
	paramMemberID := req.Params["memberID"]
	if len(paramMemberID) > 0 {
		rawMemberID := paramMemberID[0]
		rctx.MemberID = rawMemberID
	}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ShowMemberContext) OK(r *MemberSingle) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.api+json")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// NotModified sends a HTTP response with status code 304.
func (ctx *ShowMemberContext) NotModified() error {
	ctx.ResponseData.WriteHeader(304)
	return nil
}

// BadRequest sends a HTTP response with status code 400.
func (ctx *ShowMemberContext) BadRequest(r *JSONAPIErrors) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.api+json")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 400, r)
}

// NotFound sends a HTTP response with status code 404.
func (ctx *ShowMemberContext) NotFound(r *JSONAPIErrors) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.api+json")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 404, r)
}

// InternalServerError sends a HTTP response with status code 500.
func (ctx *ShowMemberContext) InternalServerError(r *JSONAPIErrors) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.api+json")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 500, r)
}
