// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "ocg": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/aweisser/ocg-poc/io/rest/design
// --out=$(GOPATH)\src\github.com\aweisser\ocg-poc\io\rest\
// --version=v1.1.0-dirty

package app

import (
	"github.com/goadesign/goa"
)

// JSONAPIErrors media type (default view)
//
// Identifier: application/vnd.jsonapierrors+json; view=default
type JSONAPIErrors struct {
	Errors []*JSONAPIError `form:"errors" json:"errors" xml:"errors"`
}

// Validate validates the JSONAPIErrors media type instance.
func (mt *JSONAPIErrors) Validate() (err error) {
	if mt.Errors == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "errors"))
	}
	for _, e := range mt.Errors {
		if e != nil {
			if err2 := e.Validate(); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// Holds a single response to a member request (default view)
//
// Identifier: application/vnd.member+json; view=default
type MemberSingle struct {
	Data *Member `form:"data" json:"data" xml:"data"`
	// An array of mixed types
	Included []interface{} `form:"included,omitempty" json:"included,omitempty" xml:"included,omitempty"`
}

// Validate validates the MemberSingle media type instance.
func (mt *MemberSingle) Validate() (err error) {
	if mt.Data == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`response`, "data"))
	}
	if mt.Data != nil {
		if err2 := mt.Data.Validate(); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}
